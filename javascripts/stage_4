!function(e){e.dynamic_require_severity="warning";var n=e.top,t=e.nil,o=(e.breaker,e.slice,e.klass);return e.add_stubs(["$code","$new"]),function(e,$super){function n(){}var r=n=o(e,$super,"Stage4",n),a=r.$$proto,u=r.$$scope;return a.$display_code=function(){return'puts "Hello #{upper(@name)}"\nputs "Hello #{lower(@name)}"\nputs "Hello #{random_name}"\n'},a.$code=function(){return""+u.get("Stage3").$new().$code()+"\nputs \"Hello #{random_name}\"\n\nresult = 1.upto(100).inject([]) do |memo, number|\n  memo << random_name\nend\n\nif result.count('Nikesh') > 0 and result.count(@name) > 0\n  true\nelse\n  puts 'please ensure your `random_name` returns the value of `@name` or \"Nikesh\" randomly.'\nend\n"},a.$instructions=function(){return'Well done!</br></br>\nNow please implement a method called `random_name` that will output either the string "Nikesh" or the value of `@name` at random.  Do not delete the previous methods.\n'},a.$next_stage=function(){return u.get("Stage5").$new()},t&&"next_stage"}(n,null)}(Opal);