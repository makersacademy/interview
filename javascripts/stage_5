!function(e){e.dynamic_require_severity="warning";var n=e.top,t=e.nil,r=(e.breaker,e.slice,e.klass);return e.add_stubs(["$code","$new"]),function(e,$super){function n(){}var o=n=r(e,$super,"Stage5",n),a=o.$$proto,u=o.$$scope;return a.$display_code=function(){return'puts "Hello #{upper(@name)}"\nputs "Hello #{lower(@name)}"\nputs "Hello #{random_name}"\nputs "Hello #{random_case(@name)}"\n'},a.$code=function(){return""+u.get("Stage4").$new().$code()+"\nputs \"Hello #{random_case(@name)}\"\n\nresult = 1.upto(100).inject([]) do |memo, number|\n  memo << random_case('John')\nend\n\nif result.count('JOHN') > 0 and result.count('john') > 0\n  true\nelse\n  puts \"please ensure your `random_case` method returns either upper case or lower case randomly.\"\nend\n"},a.$instructions=function(){return"Well done!</br></br>\nNow please implement a method called `random_case` that will return a lower or upper case version of a string at random.  Do not delete the previous methods.\n"},a.$next_stage=function(){return u.get("Stage6").$new()},t&&"next_stage"}(n,null)}(Opal);